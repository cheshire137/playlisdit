@import "primer-utilities/index.scss";
@import "https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css";

.thumbnail-link {
  width: 100px;
  height: 100px;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;

  img {
    visibility: hidden;
  }
}

.button.dropdown-item {
  border: none;
  width: 100%;
  text-align: left;

  &:hover,
  &:focus {
    color: #0a0a0a;
    background-color: whitesmoke;
  }

  &.is-active {
    background-color: #3273dc;
    color: #fff;
  }
}

.dropdown-menu {
  min-width: 5em;
}

.dropdown-item {
  line-height: 1.3;
  padding: 0.3rem 0.8rem;
}

.dropdown-content {
  padding-bottom: 0.3rem;
  padding-top: 0.3rem;
}

.spotify-artist-link {
  + .spotify-artist-link {
    &::before {
      content: ", ";
    }
  }
}

.spotify-link,
.audio-control-bar a.spotify-link,
.audio-control-bar a.spotify-link:visited,
.audio-control-bar a.spotify-link:active,
.audio-control-bar a.spotify-link:link {
  color: #2ab858;
}

.reddit-link {
  color: #ff4500;
}

.reddit-icon,
.spotify-icon {
  width: 16px;
  vertical-align: middle;
  margin-top: -3px;
  height: 16px;
}

.tracks-list {
  .spotify-track {
    .spotify-icon {
      display: none;
    }
  }
}

.icon svg {
  fill: currentColor;
  display: inline-block;
  vertical-align: text-bottom;
}

svg:not(:root) {
  overflow: hidden;
}

.track-count {
  font-size: 0.9rem;
  margin-left: 1em;
  color: #666;

  &::before {
    content: "(";
  }

  &::after {
    content: ")";
  }
}

.reddit-post-meta {
  margin-left: 21px;
}

.audio-control-button {
  line-height: 1;
  height: auto;
}

.audio-control-filler {
  line-height: 1;
  width: 28px;
  height: 24px;
  vertical-align: middle;
}

.layout-container {
  display: flex;
  min-height: 100vh;
  flex-direction: column;
}

.layout-children-container {
  flex: 1 0 auto;
}

.audio-control-bar {
  left: 0;
  right: 0;
  bottom: 0;
  position: fixed;
  background-color: #333;
  color: #ccc;

  a, a:link, a:active, a:visited {
    color: #fff;
    text-decoration: none;
  }

  a:hover, a:focus {
    text-decoration: underline;
  }

  .track-meta {
    font-size: 0.9rem;
  }
}

@mixin rotate($degrees) {
  -webkit-transform: rotate($degrees);
  -moz-transform: rotate($degrees);
  -ms-transform: rotate($degrees);
  -o-transform: rotate($degrees);
  transform: rotate($degrees);
}

$circle-size: 0.08em;
$progress-color: hsl(171, 100%, 41%);
$pause-button-bg: #fff;
$circle-effective-size: 25px;

.radial-progress-container {
  position: relative;
  vertical-align: middle;
  display: inline-block;
  width: 28px;
  height: 26px;

  .button {
    position: absolute;
    left: 0;
    top: 0;
    width: $circle-effective-size;
    border: none;
    background-color: transparent;
    padding: 0;
    height: auto;
    line-height: 1;
  }
}

.c100 {
  *, *:before, *:after {
    box-sizing: content-box;
  }

  position: absolute;
  font-size: $circle-effective-size;
  left: 0;
  top: 0;
  width: 1em;
  height: 1em;
  border-radius: 50%;
  float: left;
  margin: 0 0.1em 0.1em 0;
  background-color: $pause-button-bg;

  &.center{
    float: none;
    margin: 0 auto;
  }

  > span {
    position: absolute;
    width: 100%;
    z-index: 1;
    left: 0;
    top: 0;
    width: 5em;
    line-height: 5em;
    font-size: 0.2em;
    color: $pause-button-bg;
    display: block;
    text-align: center;
    white-space: nowrap;
    transition: all 0.2s ease-out;
  }

  &:after{
    position: absolute;
    top: $circle-size;
    left: $circle-size;
    display: block;
    content: " ";
    border-radius: 50%;
    background-color: $pause-button-bg;
    width: 1 - (2 * $circle-size);
    height: 1 - (2 * $circle-size);
    transition: all 0.2s ease-in;
  }

  .slice {
    position: absolute;
    width: 1em;
    height: 1em;
    clip: rect(0em, 1em, 1em, 0.5em);
  }

  .bar {
    position: absolute;
    border: $circle-size solid $progress-color;
    width: 1 - (2 * $circle-size);
    height: 1 - (2 * $circle-size);
    clip: rect(0, 0.5em, 1em, 0);
    border-radius: 50%;
    @include rotate(0deg);
  }

  @for $j from 51 through 100 {
    &.p#{$j} .slice {
      clip: rect(auto, auto, auto, auto);
    }

    &.p#{$j} .bar:after{
      @include rotate(180deg);
    }

    &.p#{$j} .fill{
      position: absolute;
      border: $circle-size solid $progress-color;
      width: 1 - (2 * $circle-size);
      height: 1 - (2 * $circle-size);
      clip: rect(0, 0.5em, 1em, 0);
      border-radius: 50%;
      @include rotate(0deg);
      @include rotate(180deg);
    }
  }

  // loop to rotate all 100 circles
  @for $j from 1 through 100 {
    &.p#{$j} .bar {
      @include rotate((360/100*$j) + deg);
    }
  }

  &:hover{
    cursor: default;
  }
}
